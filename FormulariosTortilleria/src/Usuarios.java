
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Manuel Jimeno
 */
public class Usuarios extends javax.swing.JFrame {
    
    Connection conexion = null;
    String url = "jdbc:mysql://127.0.0.1:3306/proyectotortillas";
    String usuario = "root";
    String password = "";
    
    /**
     * Creates new form Usuarios
     */
    public Usuarios() {
        initComponents();
        TextPrompt usuario = new TextPrompt("Usuario", txtUsuario1);
        TextPrompt psw = new TextPrompt("Password", txtPsw);
        llenarTabla();
    }

    public void llenarTabla(){
        try {
      conexion = DriverManager.getConnection(url, usuario, password);

      // 2. Crear statement y ejecutar consulta
      Statement stmt = conexion.createStatement();
      ResultSet rs = stmt.executeQuery("SELECT * FROM usuario");

      // 3. Crear modelo de datos
      DefaultTableModel modelo = new DefaultTableModel();
      modelo.addColumn("ID");
      modelo.addColumn("Usuario");
      modelo.addColumn("PSW");      

      // 4. Agregar datos al modelo
      while (rs.next()) {
        Object[] fila = new Object[3];
        fila[0] = rs.getInt("idUsuario");
        fila[1] = rs.getString("usuario");
        fila[2] = rs.getString("psw");        
        modelo.addRow(fila);
      }

      // 5. Crear JTable y establecer modelo
        tablaUsuarios.setModel(modelo);

      

      // 7. Cerrar recursos
      rs.close();
      stmt.close();
      conexion.close();

    } catch (SQLException e) {
      e.printStackTrace();
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        txtPsw = new javax.swing.JTextField();
        txtUsuario1 = new javax.swing.JTextField();
        btnRegresar = new javax.swing.JButton();
        btnModificarU = new javax.swing.JButton();
        btnAgregarU = new javax.swing.JButton();
        btnEliminarU = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnModificarU.setText("Modificar");
        btnModificarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUActionPerformed(evt);
            }
        });

        btnAgregarU.setText("Agregar");
        btnAgregarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarUActionPerformed(evt);
            }
        });

        btnEliminarU.setText("Eliminar");
        btnEliminarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregarU, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPsw, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEliminarU, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificarU, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPsw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarU)
                    .addComponent(btnEliminarU)
                    .addComponent(btnModificarU)
                    .addComponent(btnRegresar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        Principal prin = new Principal();
        prin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnAgregarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarUActionPerformed
        // TODO add your handling code here:
        String usuarioSentencia = "null,'"+txtUsuario1.getText()+"','"+txtPsw.getText()+"'";
        String insertar = insertar("usuario", usuarioSentencia);
        System.out.println(insertar);
        llenarTabla();
    }//GEN-LAST:event_btnAgregarUActionPerformed

    private void btnEliminarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUActionPerformed
        // TODO add your handling code here:
        int fila = tablaUsuarios.getSelectedRow();
        String valor = tablaUsuarios.getValueAt(fila, 0).toString();
        System.out.println(valor);
        String condicion = "idUsuario="+valor;
        try{
            eliminar("usuario", condicion);
            llenarTabla();
            System.out.println("Metodo");
        }catch(Exception e){
            System.out.println("Chin");
        }
    }//GEN-LAST:event_btnEliminarUActionPerformed

    private void btnModificarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUActionPerformed
        // TODO add your handling code here:
        int fila = tablaUsuarios.getSelectedRow();
        int valor = Integer.parseInt(this.tablaUsuarios.getValueAt(fila, 0).toString());        
        String usuario = tablaUsuarios.getValueAt(fila, 1).toString();
        String psw = tablaUsuarios.getValueAt(fila, 2).toString();        
        String condicion = "idUsuario="+valor;
        String campos = "usuario='"+usuario+"',psw='"+psw+"'";
        try{            
            modificar("usuario", campos, condicion);
            llenarTabla();
        }catch(Exception e){
            System.out.println("Chin");
        }
    }//GEN-LAST:event_btnModificarUActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarU;
    private javax.swing.JButton btnEliminarU;
    private javax.swing.JButton btnModificarU;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtPsw;
    private javax.swing.JTextField txtUsuario1;
    // End of variables declaration//GEN-END:variables

    private static String insertar(java.lang.String nombreTabla, java.lang.String campos) {
        pkg.webservice.WSTortilleria_Service service = new pkg.webservice.WSTortilleria_Service();
        pkg.webservice.WSTortilleria port = service.getWSTortilleriaPort();
        return port.insertar(nombreTabla, campos);
    }

    private static String consultar(java.lang.String nombreTabla, java.lang.String datos, java.lang.String condicion) {
        pkg.webservice.WSTortilleria_Service service = new pkg.webservice.WSTortilleria_Service();
        pkg.webservice.WSTortilleria port = service.getWSTortilleriaPort();
        return port.consultar(nombreTabla, datos, condicion);
    }

    private static String eliminar(java.lang.String nombreTabla, java.lang.String condicion) {
        pkg.webservice.WSTortilleria_Service service = new pkg.webservice.WSTortilleria_Service();
        pkg.webservice.WSTortilleria port = service.getWSTortilleriaPort();
        return port.eliminar(nombreTabla, condicion);
    }

    private static String modificar(java.lang.String nombreTabla, java.lang.String campos, java.lang.String condicion) {
        pkg.webservice.WSTortilleria_Service service = new pkg.webservice.WSTortilleria_Service();
        pkg.webservice.WSTortilleria port = service.getWSTortilleriaPort();
        return port.modificar(nombreTabla, campos, condicion);
    }
}

